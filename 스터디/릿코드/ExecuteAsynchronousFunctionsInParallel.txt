/**
 * @param {Array<Function>} functions
 * @return {Promise<any>}
 */
var promiseAll = function(functions) {
    return new Promise((resolve, reject) => {
        const length = functions.length;
        let resolveList = new Array(length).fill(0);
        let resolveCount = 0;

        functions.forEach((fn, index) => {
            fn().then((res) => {
                resolveList[index] = res;
                resolveCount++;
                if(resolveCount === length) resolve(resolveList);
            }).catch((error) => {
                reject(error);
            });
        });
    });
};//end promiseAll.

/**
 * const promise = promiseAll([() => new Promise(res => res(42))])
 * promise.then(console.log); // [42]
 */