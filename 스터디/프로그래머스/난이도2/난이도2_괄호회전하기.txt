import java.util.*;

class Solution {
    public int solution(String s) {
        int answer = 0;
        int[][] check_list = new int[3][2];
        
        for(int i=0; i<s.length(); i++){
            if(s.charAt(i) == '[') check_list[0][0]++;
            else if(s.charAt(i) == ']') check_list[0][1]++;
            else if(s.charAt(i) == '{') check_list[1][0]++;
            else if(s.charAt(i) == '}') check_list[1][1]++;
            else if(s.charAt(i) == '(') check_list[2][0]++;
            else if(s.charAt(i) == ')') check_list[2][1]++;
        }//end check_cnt.
        
        if(check_list[0][0] == check_list[0][1] && check_list[1][0] == check_list[1][1] && check_list[2][0] == check_list[2][1]){
            String tmp = s;
            int time = 0;
            while(time < s.length()){
                if(check(tmp)) answer++;
                char change = tmp.charAt(0);
                tmp = tmp.substring(1);
                tmp += change;
                time++;
            }//end while.
        }
        return answer;
    }//end main.
    private boolean check(String tmp){
        
        Stack<Character> stack = new Stack<Character>();
        
        for(int i=0; i<tmp.length(); i++){
            if(tmp.charAt(i) == '[') stack.add('[');
            else if(tmp.charAt(i) == ']') {
                if(stack.isEmpty() || stack.peek() != '[') return false;
                else stack.pop();
            }
            else if(tmp.charAt(i) == '{') stack.add('{');
            else if(tmp.charAt(i) == '}') {
                if(stack.isEmpty() || stack.peek() != '{') return false;
                else stack.pop();
            }
            else if(tmp.charAt(i) == '(') stack.add('(');
            else if(tmp.charAt(i) == ')') {
                if(stack.isEmpty() || stack.peek() != '(') return false;
                else stack.pop();
            }
        }//end for.
        return true;
    }//end check.
}//end solution.