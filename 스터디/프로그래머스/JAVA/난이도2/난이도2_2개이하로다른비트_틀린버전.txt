class Solution {
    public long[] solution(long[] numbers) {
        long[] answer = new long[numbers.length];
        for(int num=0; num<numbers.length; num++){
            long number = numbers[num];
            String num_to_bin = ltob(number);
            for(int i=1; i<num_to_bin.length(); i++){
                char first = num_to_bin.charAt(num_to_bin.length()-i);
                char second = num_to_bin.charAt(num_to_bin.length()-(i+1));
                if(first == '1' && second == '1') continue;
                else{
                    String left = num_to_bin.substring(0, num_to_bin.length()-i-1);
                    String right = num_to_bin.substring(num_to_bin.length()-i+1 , num_to_bin.length());
                    String mid = "";
                    if(first == '1' && second == '0') mid = "10";
                    else if(first == '0' && second == '1') mid = "11";
                    else mid = "01";
                    String tmp = left + mid + right;
                    answer[num] = btol(tmp);
                    break;
                }
            }//end for.
        }
        return answer;
    }//end main.
    private String ltob(long num){
        String bin = "";
        while(num != 0){
            bin = num%2 + bin;
            num /= 2;
        }//end while.
        return '0' + bin;
    }//end ltob.
    private long btol(String bin){
        long num = 0L;
        for(int i=0; i<bin.length(); i++){
            num += Math.pow(2, i) * (bin.charAt(bin.length()-i-1) - '0');
        }
        return num;
    }//end binary.
}//end solution.