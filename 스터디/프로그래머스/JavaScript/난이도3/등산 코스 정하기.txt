function solution(n, paths, gates, summits) {
    const VERTEX_MAX = 50001;
    const INTENSITY_MAX = 10000001;
    
    let answer = [VERTEX_MAX, INTENSITY_MAX];
    
    const edgeArray = Array.from({length: n+1}, () => []);
    const intensityArray = new Array(n+1).fill(INTENSITY_MAX);
    const summitSet = new Set(summits);
    
    for(const [v1, v2, w] of paths) {
        edgeArray[v1].push({v:v2, w:w});
        edgeArray[v2].push({v:v1, w:w});
    }//end for1.
    
    const queue = [];
    
    for(const gate of gates) {
        intensityArray[gate] = 0; // 각 출발점 intensity 0 으로 세팅.
        queue.push([gate,0]);
    }//end for1.
    
    while(queue.length !== 0) {
        const [current, weight] = queue.shift();
        
        if(summitSet.has(current)) continue; // 산봉우리 도착한 경우.
        
        for(const next of edgeArray[current]) {
            const max = Math.max(weight, next.w);
            if(max < intensityArray[next.v]) {
                intensityArray[next.v] = max;
                queue.push([next.v, max]);
            }
        }//end for1.
    }//end while.
    
    summits.sort((a,b) => a-b);
    
    for(const summit of summits) {
        if(answer[1] > intensityArray[summit]) {
            answer[0] = summit;
            answer[1] = intensityArray[summit];
        }
    }//end for1.
    
    return answer;
}//end solution.