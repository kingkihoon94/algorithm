function solution(numbers) {
    let answer = Number.MAX_SAFE_INTEGER;

    const getWeight = (l , r) => {
        if(l === r) return 1;

        let lx = -1, ly = -1, rx = -1, ry = -1;

        if(l === 0) {
            lx = 3;
            ly = 1;
        } else {
            lx = Math.floor((l-1)/3);
            ly = (l-1)%3;
        }

        if(r === 0) {
            rx = 3;
            ry = 1;
        } else {
            rx = Math.floor((r-1)/3);
            ry = (r-1)%3;
        }

        let minDiff = 10; // 크게 10이라고 잡음.

        const xDiff = Math.abs(lx-rx);
        const yDiff = Math.abs(ly-ry);

        if(xDiff < yDiff) {
            return 3 * xDiff + 2 * (yDiff - xDiff);
        } else if(yDiff < xDiff) {
            return 3 * yDiff + 2 * (xDiff - yDiff);
        } else return 3 * xDiff;
    }//end getWeight.

    const dpArray = Array.from({ length: numbers.length }, () =>
      Array.from({ length: 10 }, () =>
        Array(10).fill(Number.MAX_SAFE_INTEGER)
      )
    );

    const initNumber = Number(numbers[0]);

    if(initNumber === 4) {
        dpArray[0][initNumber][6] = 1;
    } else if(initNumber === 6) {
        dpArray[0][4][initNumber] = 1;
    } else {
        const w = getWeight(4,initNumber);
        dpArray[0][initNumber][6] = getWeight(4,initNumber);
        dpArray[0][4][initNumber] = getWeight(6,initNumber);
    }

    for(let i=1; i<numbers.length; i++) {
        const number = Number(numbers[i]);
        for(let l=0; l<10; l++) {
            for(let r=0; r<10; r++) {
                if(l === r) continue;

                if(dpArray[i-1][l][r] !== Number.MAX_SAFE_INTEGER) {
                    if(l === number || r === number) {
                        dpArray[i][l][r] = Math.min(dpArray[i][l][r] , dpArray[i-1][l][r] + 1);
                    } else {
                        const lWeight = getWeight(l,number);
                        const rWeight = getWeight(r,number);

                        dpArray[i][number][r] = Math.min(dpArray[i][number][r], dpArray[i-1][l][r] + lWeight);
                        dpArray[i][l][number] = Math.min(dpArray[i][l][number], dpArray[i-1][l][r] + rWeight);

                    }
                }

            }//end for3.
        }//end for2.
    }//end for1.

    for(let i=0; i<10; i++) {
        for(let j=0; j<10; j++) {
            if(i===j) continue;

            if(dpArray[numbers.length-1][i][j] !== Number.MAX_SAFE_INTEGER) {
                answer = Math.min(answer, dpArray[numbers.length-1][i][j]);
            }
        }//end for2.
    }//end for1.

    return answer;
}//end solution.